import { Source, Output, AnyIterable } from './base';
import * as Papa from 'papaparse';
import { OperatorAsyncFunction } from 'ix/interfaces';
export interface CSVReadOptions {
    delimiter?: string;
    newline?: string;
    quoteChar?: string;
    escapeChar?: string;
    header?: boolean;
    trimHeaders?: boolean;
    dynamicTyping?: boolean | {
        [headerName: string]: boolean;
        [columnNumber: number]: boolean;
    } | ((field: string | number) => boolean);
    encoding?: string;
    comments?: boolean | string;
    skipEmptyLines?: boolean | 'greedy';
    fastMode?: boolean;
    delimitersToGuess?: Papa.GuessableDelimiters[];
}
export declare function csvRead<T>(source: Source, options?: CSVReadOptions): AsyncIterable<T>;
export declare type CSVObject = Record<string, string | number | boolean | undefined | null>;
export interface CSVWriteOptions {
    quotes?: boolean | boolean[];
    quoteChar?: string;
    escapeChar?: string;
    delimiter?: string;
    header?: boolean;
    newline?: string;
    skipEmptyLines?: boolean | 'greedy';
    columns?: string[];
}
export declare function csvWrite<T extends CSVObject>(out: Output): OperatorAsyncFunction<T, T>;
export declare function csvWrite<T extends CSVObject>(data: AnyIterable<T>, out: Output): AsyncIterable<T>;
//# sourceMappingURL=csv.d.ts.map