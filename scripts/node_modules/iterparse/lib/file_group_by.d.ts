import { AsyncIterableX } from "ix/asynciterable";
export interface Group<T> {
    key: string;
    count: number;
    items: AsyncIterableX<T>;
}
export interface GroupByOptions {
    cacheLocation: string;
    invalidate: string | ((cacheData: {
        generated: Date;
        hash: string;
    }) => string);
}
export declare function fileGroupBy<T>(fn: (data: T) => string | ReadonlyArray<string>, options: GroupByOptions): (data: AsyncIterableX<T>) => AsyncIterableX<Group<T>>;
export declare function fileGroupBy<T>(data: AsyncIterableX<T>, fn: (data: T) => string | ReadonlyArray<string>, options: GroupByOptions): AsyncIterableX<Group<T>>;
//# sourceMappingURL=file_group_by.d.ts.map